- hosts: all

  vars:
    flaskapp_path: /srv/flaskapp
    flaskapp_user: flaskapp

  tasks:
    - name: Transfer auth key form current user
      authorized_key:
        user: "{{ lookup('env','USER') }}"
        state: present
        key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"

    - name: Disable ssh password auth
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^(#*)PasswordAuthentication(.*)$'
        line: "PasswordAuthentication no"
      become: yes

    - name: Disable ssh root login
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^(#*)PermitRootLogin(.*)$'
        line: "PermitRootLogin no"
      become: yes

    
    - name: Iptables block
      block:
        - name: Flush rules
          iptables:
            chain: "{{ item }}"
            flush: yes
          with_items:
            - INPUT
            - OUTPUT
            - FORWARD
        - name: Allow established connections
          iptables:
            chain: INPUT
            ctstate: ESTABLISHED,RELATED
            jump: ACCEPT
        - name: Open ports
          iptables:
            chain: INPUT
            destination_port: "{{ item[0] }}"
            protocol: "{{ item[1] }}"
            jump: ACCEPT
          with_nested:
            - ["22","80","433"]
            - ["tcp","udp"]
        - name: Set policy
          iptables:
            chain: "{{ item }}"
            policy: DROP
          with_items:
            - INPUT
            - FORWARD
      become: yes

    
    - name: Create flaskapp user
      user:
        name: "{{ flaskapp_user }}"
        comment: Flask App User
      become: yes

    - name: Install apt dependencies
      apt:
        pkg:
          - python3
          - python3-pip
        update_cache: yes
        state: present
      become: yes
      register: apt_result
      retries: 3
      until: apt_result is success

    - name: Install pip dependencies 
      pip:
        name:
          - flask
          - waitress
      when: apt_result is success
      become: yes

    - name: Clone git repository
      git:
        repo: https://github.com/reverieline/devopscourse.git
        dest: /tmp/devopscourse

    - name: Link flask app to /srv
      file:
        src: /tmp/devopscourse/01/flaskapp
        dest: "{{ flaskapp_path }}"
        state: link
      become: yes


    - name: Fetch python3 executalbe
      shell: readlink -f $(which python3)
      register: py3path

    - name: Allow python3 to listen on protected ports
      capabilities:
        path: "{{ py3path.stdout }}"
        capability: cap_net_bind_service+ep
        state: present
      become: yes

    - name: Create service
      template:
        src: flaskapp.service.j2
        dest: /lib/systemd/system/flaskapp.service
      become: yes
      notify:
        - reload systemctl
    
    - name: start flaskapp.service
      service:
        name: flaskapp.service
        state: started
        enabled: yes
      become: yes

  handlers:
    - name: reload systemctl
      command: systemctl daemon-reload
      become: yes
